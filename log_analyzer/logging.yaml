version: 1
disable_existing_loggers: False

formatters:
  standard:
    format: "%(asctime)s - %(levelname).1s - %(message)s"
    datefmt: '%Y-%m-%d %H:%M:%S'
  error:
    format: "%(asctime)s %(levelname).1s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"
    datefmt: '%Y-%m-%d %H:%M:%S'

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: standard
    stream: ext://sys.stdout

#  debug_file_handler:
#    class: logging.handlers.RotatingFileHandler
#    level: DEBUG
#    formatter: standard
#    filename: ./logs/debug.log
#    maxBytes: 10485760 # 10MB
#    backupCount: 20
#    encoding: utf8

  info_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: standard
    filename: ./logs/info.log
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

  error_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: error
    filename: ./logs/errors.log
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

#  warn_file_handler:
#    class: logging.handlers.RotatingFileHandler
#    level: WARN
#    formatter: standard
#    filename: ./logs/warn.log
#    maxBytes: 10485760 # 10MB
#    backupCount: 20
#    encoding: utf8

  critical_file_handler:
    class: logging.handlers.RotatingFileHandler
    level: CRITICAL
    formatter: standard
    filename: ./logs/critical.log
    maxBytes: 10485760 # 10MB
    backupCount: 20
    encoding: utf8

root:
  level: NOTSET
  handlers: [ console ]

loggers:
  analyzer:
    level: INFO
    handlers: [ console, info_file_handler, error_file_handler, critical_file_handler ]
    propagate: False
